{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","className","s","statusText","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","statusInput","ProfileInfo","profile","avatar","main","profilePhoto","src","photos","large","userPhoto","alt","info","fullName","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","lookingForAJob","lookingForAJobDescription","Preloader","Post","item","message","likeCount","MyPosts","React","memo","postsElements","posts","map","p","post","likesCount","myPosts","AddNewPostForm","onSubmit","values","addPost","newPostBody","maxLength30","maxLengthCreator","reduxForm","form","handleSubmit","myPost","Field","name","component","Textarea","placeholder","textarea","validate","required","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","loggedUserId","putUserId","getStatus","Component","compose","auth","isAuth","setUserProfile","withRouter","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,6BAA6B,KAAO,0BAA0B,OAAS,4BAA4B,KAAO,0BAA0B,aAAe,kCAAkC,KAAO,0BAA0B,YAAc,iCAAiC,WAAa,kC,oBCA9SD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,OAAS,wBAAwB,MAAQ,yB,oBCAnID,EAAOC,QAAU,CAAC,KAAO,qB,sJCyCVC,EAvCgB,SAACC,GAAW,IAAD,EAERC,oBAAS,GAFD,mBAEjCC,EAFiC,KAEvBC,EAFuB,OAGZF,mBAASD,EAAMI,QAHH,mBAGjCA,EAHiC,KAGzBC,EAHyB,KAMtCC,qBAAU,WACND,EAAUL,EAAMI,UACjB,CAACJ,EAAMI,SAeV,OACI,iCACMF,GACE,qBAAKK,cAhBQ,WACrBJ,GAAY,IAeJ,SACI,mBAAGK,UAAWC,IAAEC,WAAhB,SAA6BV,EAAMI,QAAU,YAGpDF,GACG,8BACI,0BAAUS,SAbH,SAACC,GACpBP,EAAUO,EAAEC,cAAcC,QAYsBC,OAlBzB,WACvBZ,GAAY,GACZH,EAAMgB,aAAaZ,IAgByDa,WAAW,EAAMT,UAAWC,IAAES,YAAaJ,MAAOV,UCIvHe,EAlCK,SAACnB,GAEjB,OAAKA,EAAMoB,QAKP,8BACI,sBAAKZ,UAAWC,IAAEY,OAAlB,UACI,sBAAKb,UAAWC,IAAEa,KAAlB,UACI,sBAAKd,UAAWC,IAAEc,aAAlB,UACI,qBAAKC,IAAmC,MAA9BxB,EAAMoB,QAAQK,OAAOC,MAAgB1B,EAAMyB,OAAOC,MAAQC,IAAWC,IAAI,KACnF,qBAAKJ,IAAKxB,EAAMoB,QAAQK,OAAOC,WAEnC,cAAC,EAAD,CAAwBtB,OAAQJ,EAAMI,OAAQY,aAAchB,EAAMgB,kBAEtE,sBAAKR,UAAWC,IAAEoB,KAAlB,UACI,uCAAS,+BAAO7B,EAAMoB,QAAQU,cAC9B,wCAAU,+BAAO9B,EAAMoB,QAAQW,aAC/B,2CAAa,+BAAO/B,EAAMoB,QAAQY,SAASC,cAC3C,0CAAY,+BAAOjC,EAAMoB,QAAQY,SAASE,aAC1C,qCAAO,+BAAOlC,EAAMoB,QAAQY,SAASG,QACrC,0CAAY,+BAAOnC,EAAMoB,QAAQY,SAASI,aAC1C,4CAAc,+BAAOpC,EAAMoB,QAAQY,SAASK,eAC5C,0CAAY,+BAAOrC,EAAMoB,QAAQY,SAASM,aAC1C,yCAAW,+BAAOtC,EAAMoB,QAAQY,SAASO,YACzC,sCAAQ,gCAAwC,IAAjCvC,EAAMoB,QAAQoB,eAA0B,gEAAgB,wFACvE,kDAAoB,+BAAOxC,EAAMoB,QAAQqB,uCAxB9C,cAACC,EAAA,EAAD,K,qFCKAC,EAXF,SAAC3C,GACV,OACI,sBAAKQ,UAAWC,IAAEmC,KAAlB,UACI,qBAAKpB,IAAI,kEADb,IACgFxB,EAAM6C,QAClF,8BACI,0CAAY,4BAAI7C,EAAM8C,qBCAhCC,EAAUC,IAAMC,MAAK,SAACjD,GAE1B,IAAIkD,EAAgBlD,EAAMmD,MAAMC,KAAI,SAACC,GAAD,OAClC,cAAC,EAAD,CAAMR,QAASQ,EAAEC,KAAMR,UAAWO,EAAEE,gBAQtC,OACE,sBAAK/C,UAAWC,IAAE+C,QAAlB,UACE,0CACA,cAACC,EAAD,CAAgBC,SAPJ,SAACC,GACf3D,EAAM4D,QAAQD,EAAOE,gBAOnB,qBAAKrD,UAAWC,IAAE0C,MAAlB,SAA0BD,UAK1BY,EAAcC,YAAiB,IAW/BN,EAAiBO,YAAU,CAC/BC,KAAM,WADeD,EATJ,SAAChE,GAClB,OACE,uBAAM0D,SAAU1D,EAAMkE,aAAc1D,UAAWC,IAAE0D,OAAjD,UACE,cAACC,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWC,IAAUC,YAAa,eAAgBhE,UAAWC,IAAEgE,SAAUC,SAAU,CAACC,IAAUb,KACxH,oDAQSf,ICnBA6B,EAFUC,aAfH,SAACC,GACnB,MAAO,CACH3B,MAAO2B,EAAMC,YAAY5B,MACzB6B,YAAaF,EAAMC,YAAYC,gBAId,SAACC,GACtB,MAAO,CACHrB,QAAS,SAACC,GACNoB,EAASC,YAAqBrB,QAKjBgB,CAA6C9B,GCRvDoC,EATC,SAACnF,GACb,OACI,gCACI,cAAC,EAAD,CAAaoB,QAASpB,EAAMoB,QAAShB,OAAQJ,EAAMI,OAAQY,aAAchB,EAAMgB,eAC/E,cAAC,EAAD,Q,uBCCNoE,E,uKAGF,WACI,IAAIC,EAASC,KAAKtF,MAAMuF,MAAMC,OAAOH,OAChCA,IACDA,EAASC,KAAKtF,MAAMyF,cAExBH,KAAKtF,MAAM0F,UAAUL,GACrBC,KAAKtF,MAAM2F,UAAUN,K,oBAGzB,WACI,OACI,cAAC,EAAD,2BAAaC,KAAKtF,OAAlB,IAAyBoB,QAASkE,KAAKtF,MAAMoB,QAAShB,OAAQkF,KAAKtF,MAAMI,OAAQY,aAAcsE,KAAKtF,MAAMgB,oB,GAdvFgC,IAAM4C,WA2BjCC,sBACIhB,aATc,SAACC,GAAD,MAAY,CAC9B1D,QAAS0D,EAAMC,YAAY3D,QAC3BhB,OAAQ0E,EAAMC,YAAY3E,OAC1BqF,aAAcX,EAAMgB,KAAKT,OACzBU,OAAQjB,EAAMgB,KAAKC,UAKU,CAAEC,mBAAgBN,cAAWC,cAAW3E,mBACjEiF,IACAC,IAHJL,CAIET","file":"static/js/3.866e4809.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainimg\":\"ProfileInfo_mainimg__3VV6o\",\"item\":\"ProfileInfo_item__3Xkz7\",\"avatar\":\"ProfileInfo_avatar__1XxrF\",\"main\":\"ProfileInfo_main__2zhmf\",\"profilePhoto\":\"ProfileInfo_profilePhoto__3tqjv\",\"info\":\"ProfileInfo_info__N5QMX\",\"statusInput\":\"ProfileInfo_statusInput__15yWZ\",\"statusText\":\"ProfileInfo_statusText__2UgT0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__2Frl-\",\"textarea\":\"MyPosts_textarea__20W2w\",\"myPost\":\"MyPosts_myPost__3X_sa\",\"posts\":\"MyPosts_posts__1rKi6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1SNgQ\"};","import React, { useState, useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div onDoubleClick={activateEditMode}>\r\n                    <p className={s.statusText}>{props.status || \"Empty\"}</p>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <textarea onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} className={s.statusInput} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import s from './ProfileInfo.module.css';\r\nimport userPhoto from \"../../../assets/images/empty.png\";\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.avatar}>\r\n                <div className={s.main}>\r\n                    <div className={s.profilePhoto}>\r\n                        <img src={props.profile.photos.large != null ? props.photos.large : userPhoto} alt=\"\" />\r\n                        <img src={props.profile.photos.large} />\r\n                    </div>\r\n                    <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n                </div>\r\n                <div className={s.info}>\r\n                    <p>Name: <span>{props.profile.fullName}</span></p>\r\n                    <p>About: <span>{props.profile.aboutMe}</span></p>\r\n                    <p>Facebook: <span>{props.profile.contacts.facebook}</span></p>\r\n                    <p>Website: <span>{props.profile.contacts.website}</span></p>\r\n                    <p>VK: <span>{props.profile.contacts.vk}</span></p>\r\n                    <p>Twitter: <span>{props.profile.contacts.twitter}</span></p>\r\n                    <p>Instagram: <span>{props.profile.contacts.instagram}</span></p>\r\n                    <p>Youtube: <span>{props.profile.contacts.youtube}</span></p>\r\n                    <p>Github: <span>{props.profile.contacts.github}</span></p>\r\n                    <p>Job: <span>{props.profile.lookingForAJob === true ? \"Ищет работу\" : \"Работает где-то\"}</span></p>\r\n                    <p>Job description: <span>{props.profile.lookingForAJobDescription}</span></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://www.kinonews.ru/insimgs/2021/newsimg/newsimg98663.jpg\"/> {props.message}\r\n            <div>\r\n                <span>Likes <b>{props.likeCount}</b></span>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Post;","import React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../support/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls.js\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n  let postsElements = props.posts.map((p) => (\r\n    <Post message={p.post} likeCount={p.likesCount} />\r\n  ));\r\n\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostBody)\r\n  };\r\n\r\n  return (\r\n    <div className={s.myPosts}>\r\n      <h2>My posts</h2>\r\n      <AddNewPostForm onSubmit={onAddPost} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength30 = maxLengthCreator(30)\r\n\r\nconst AddNewPost = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={s.myPost}>\r\n      <Field name=\"newPostBody\" component={Textarea} placeholder={\"Post message\"} className={s.textarea} validate={[required, maxLength30]} />\r\n      <button>Add post</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewPostForm = reduxForm({\r\n  form: \"newpost\"\r\n})(AddNewPost)\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPostActionCreator(newPostBody));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from \"react-redux\";\r\nimport { setUserProfile, putUserId, getStatus, updateStatus } from \"../../redux/profile-reducer\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.loggedUserId;\r\n        }\r\n        this.props.putUserId(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    loggedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default\r\n    compose(\r\n        connect(mapStateToProps, { setUserProfile, putUserId, getStatus, updateStatus }),\r\n        withRouter,\r\n        withAuthRedirect\r\n    )(ProfileContainer)"],"sourceRoot":""}